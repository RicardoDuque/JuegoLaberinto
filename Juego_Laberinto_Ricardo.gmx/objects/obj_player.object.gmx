<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad=5;

_key_red = false;
_key_black = false;
_key_gold = false;
_key_blue = false;
_key_gray = false;
_diamond = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento del jugador

if (!place_meeting(x-velocidad,y,obj_wall))&amp;&amp;(!place_meeting(x-velocidad,y,obj_parentdoor))
    {
    if (keyboard_check(vk_left)){x = x-velocidad;}
    }

if (!place_meeting(x+velocidad,y,obj_wall))&amp;&amp;(!place_meeting(x+velocidad,y,obj_parentdoor))
    {
    if (keyboard_check(vk_right)){x = x+velocidad;}
    }

if (!place_meeting(x,y+velocidad,obj_wall))&amp;&amp;(!place_meeting(x,y+velocidad,obj_parentdoor))
    {
        if (keyboard_check(vk_down))
        {
            y = y+velocidad;
        }
    }
    
if (!place_meeting(x, y - velocidad, obj_wall))&amp;&amp;(!place_meeting(x,y-velocidad,obj_parentdoor))
    {
        if (keyboard_check(vk_up))
            {
                y = y - velocidad;
            }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión llaves

/*  Se utiliza pñace_meeting para verificar la colisión con alguna llave
    luego se destruye la llave y se pone a true la variable respectiva en
    el objeto principal de llave.
    */

if (place_meeting(x,y, obj_key_black))
    {
    with(obj_key_black){instance_destroy();}
    _key_black = true;
    audio_play_sound(snd_diamond, 10, false)
    }

if (place_meeting(x,y, obj_key_red))
    {
    with(obj_key_red){instance_destroy();}
    _key_red = true;
    audio_play_sound(snd_diamond, 10, false)
    }
    
if (place_meeting(x,y, obj_key_blue))
    {
    with(obj_key_blue){instance_destroy();}
    _key_blue = true;
    }
    
if (place_meeting(x,y, obj_key_gold))
    {
    with(obj_key_gold){instance_destroy();}
    _key_gold = true;
    audio_play_sound(snd_diamond, 10, false)
    }
    
if (place_meeting(x,y, obj_key_gray))
    {
    with(obj_key_gray){instance_destroy();}
    _key_gray = true;
    audio_play_sound(snd_diamond, 10, false)
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión de las puertas

/*  En forma similar a las llaves se verificará el estado de la variable respectiva
    de la llave, la colisión y luego se destruye la puerta
    */
    
if(_key_black)
    {
    if(place_meeting(x+velocidad,y,obj_door_black))||
    (place_meeting(x-velocidad,y,obj_door_black))||
    (place_meeting(x,y+velocidad,obj_door_black))||
    (place_meeting(x,y-velocidad,obj_door_black))
        {
        with(obj_door_black){instance_destroy();}
        audio_play_sound(snd_door,10,false)
        }
    }
    
if(_key_red)
    {
    if(place_meeting(x+velocidad,y,obj_door_red))||
    (place_meeting(x-velocidad,y,obj_door_red))||
    (place_meeting(x,y+velocidad,obj_door_red))||
    (place_meeting(x,y-velocidad,obj_door_red))
        {
        with(obj_door_red){instance_destroy();}
        audio_play_sound(snd_door,10,false)
        }
    }
    
if(_key_blue)
    {
    if(place_meeting(x+velocidad,y,obj_door_blue))||
    (place_meeting(x-velocidad,y,obj_door_blue))||
    (place_meeting(x,y+velocidad,obj_door_blue))||
    (place_meeting(x,y-velocidad,obj_door_blue))
        {
        with(obj_door_blue){instance_destroy();}
        audio_play_sound(snd_door,10,false)
        }
    }
    
if(_key_gold)
    {
    if(place_meeting(x+velocidad,y,obj_door_gold))||
    (place_meeting(x-velocidad,y,obj_door_gold))||
    (place_meeting(x,y+velocidad,obj_door_gold))||
    (place_meeting(x,y-velocidad,obj_door_gold))
        {
        with(obj_door_gold){instance_destroy();}
        audio_play_sound(snd_door,10,false)
        }
    }
    
if(_key_gray)
    {
    if(place_meeting(x+velocidad,y,obj_door_gray))||
    (place_meeting(x-velocidad,y,obj_door_gray))||
    (place_meeting(x,y+velocidad,obj_door_gray))||
    (place_meeting(x,y-velocidad,obj_door_gray))
        {
        with(obj_door_gray){instance_destroy();}
        audio_play_sound(snd_door,10,false)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parentenemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
audio_play_sound(snd_dead,10,false);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_goal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_goal,10,false);

if (room_exists(room_next(room)))
    {room_goto_next();}
    else
    {room_goto(Start);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_diamond">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_diamond</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
